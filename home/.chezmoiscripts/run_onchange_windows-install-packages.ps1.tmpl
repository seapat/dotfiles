# packages.toml hash: {{ include ".chezmoidata/packages.toml" | sha256sum }}

### WINDOWS ###
{{- if eq .chezmoi.os "windows" -}}

    ### Scoop ###

    {{- if ( or (.scoop.buckets) (gt 0 (len .scoop.work)) (gt 0 (len .scoop.home)) (gt 0 (len .scoop.gaming)) ) -}}

        $Env:SCOOP = $Env:Userprofile+"/scoop"
        $Env:SCOOP_GLOBAL = $Env:ProgramData+"/scoop"

        {{ if .isAtomic -}}
            # scoop uninstall scoop
        {{ end -}}

        # Install scoop if the command is not available
        if((Get-Command "scoop" -ErrorAction SilentlyContinue) -eq $null){

            Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser -Force
            Invoke-RestMethod -Uri https://get.scoop.sh | Invoke-Expression

            sudo Add-MpPreference -ExclusionPath $Env:SCOOP_GLOBAL
            sudo Add-MpPreference -ExclusionPath $Env:SCOOP
        }

        scoop install {{ range .scoop.bootstrap -}} {{ . | quote }} {{ end -}} 
        
        # iterate over scoop packages in .chezmoidata/packages
        {{ range $key, $value := .scoop.buckets -}}
            scoop bucket add {{ $key | quote}} {{ $value | quote}}
        {{ end -}}

        gsudo scoop install {{ range .scoop.base -}} {{ . | quote }} {{ end -}} 
        
        # TODO: generate list of profiles in chezmoi.toml via prompts, then just loop over and install same-named sets from data
        {{- if (and (.isWork) (gt (len .scoop.work) 0)) }}
            gsudo scoop install -s {{ range .scoop.work -}} {{ . | quote }} {{ end -}} 
        {{ end -}}

        {{- if (and (.isHome) (gt (len .scoop.home) 0))}}
            gsudo scoop install -s {{ range .scoop.home -}} {{ . | quote }} {{ end -}} 
        {{ end -}}

        {{- if  (and (.isGaming) (gt (len .scoop.gaming) 0)) }}
            gsudo scoop install -s {{ range .scoop.gaming -}} {{ . | quote }} {{ end -}} 
        {{ end -}}

    {{- end -}}

    ### Winget ###

    {{- if (and (.isWork) (gt (len .winget.work) 0)) -}}
        {{ range .winget.work -}}
            winget install -e --disable-interactivity {{ . | quote }}
        {{ end }} 
    {{ end }}

    {{- if (and (.isHome) (gt (len .winget.home) 0)) -}}
        {{ range .winget.home -}}
            winget install -e --disable-interactivity {{ . | quote }}
        {{ end }} 
    {{ end }}

    {{- if (and (.isGaming) (gt (len .winget.gaming) 0)) -}}
        {{ range .winget.gaming -}}
            winget install -e --disable-interactivity {{ . | quote }}
        {{ end }} 
    {{ end }}

{{ end -}}

### DARWIN ###
### Brew ###

# {{ if eq .chezmoi.os "darwin" -}}
# #!/bin/bash

# brew bundle --no-lock --file=/dev/stdin <<EOF
# {{ range .darwin.brews.packages -}}
# brew {{ . | quote }}
# {{ end -}}
# {{ range .darwin.casks.packages -}}
# cask {{ . | quote }}
# {{ end -}}
# EOF
# {{ end -}}